// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.0
// source: node_delete.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// *
// Delete the given node. After deletion, it will be marked as deleted.
// But information about it will continue to exist for a year.
// For phase 2, this marks the node to be deleted in the merkle tree and will be used to write config.txt and
// a-pulbic-NodeAlias.pem file per each node during prepare freeze.
// The deleted node will not be deleted until the network is upgraded.
// Such a deleted node can never be reused.
// The council has to sign this transaction. This is a privileged transaction.
type NodeDeleteTransactionBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *
	// The unique id of the node to be deleted. If invalid node is specified, transaction will
	// result in INVALID_NODE_ID.
	NodeId uint64 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *NodeDeleteTransactionBody) Reset() {
	*x = NodeDeleteTransactionBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_node_delete_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDeleteTransactionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDeleteTransactionBody) ProtoMessage() {}

func (x *NodeDeleteTransactionBody) ProtoReflect() protoreflect.Message {
	mi := &file_node_delete_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDeleteTransactionBody.ProtoReflect.Descriptor instead.
func (*NodeDeleteTransactionBody) Descriptor() ([]byte, []int) {
	return file_node_delete_proto_rawDescGZIP(), []int{0}
}

func (x *NodeDeleteTransactionBody) GetNodeId() uint64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

var File_node_delete_proto protoreflect.FileDescriptor

var file_node_delete_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34, 0x0a,
	0x19, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x42, 0x26, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x65, 0x64, 0x65, 0x72,
	0x61, 0x68, 0x61, 0x73, 0x68, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x50, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_node_delete_proto_rawDescOnce sync.Once
	file_node_delete_proto_rawDescData = file_node_delete_proto_rawDesc
)

func file_node_delete_proto_rawDescGZIP() []byte {
	file_node_delete_proto_rawDescOnce.Do(func() {
		file_node_delete_proto_rawDescData = protoimpl.X.CompressGZIP(file_node_delete_proto_rawDescData)
	})
	return file_node_delete_proto_rawDescData
}

var file_node_delete_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_node_delete_proto_goTypes = []interface{}{
	(*NodeDeleteTransactionBody)(nil), // 0: proto.NodeDeleteTransactionBody
}
var file_node_delete_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_node_delete_proto_init() }
func file_node_delete_proto_init() {
	if File_node_delete_proto != nil {
		return
	}
	file_basic_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_node_delete_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDeleteTransactionBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_node_delete_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_node_delete_proto_goTypes,
		DependencyIndexes: file_node_delete_proto_depIdxs,
		MessageInfos:      file_node_delete_proto_msgTypes,
	}.Build()
	File_node_delete_proto = out.File
	file_node_delete_proto_rawDesc = nil
	file_node_delete_proto_goTypes = nil
	file_node_delete_proto_depIdxs = nil
}
